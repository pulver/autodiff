# Copyright 2016, 2017 Peter Dimov
# Copyright (C) 2017, 2018 James E. King III
# Distributed under the Boost Software License, Version 1.0.
# (See accompanying file LICENSE_1_0.txt or copy at http://boost.org/LICENSE_1_0.txt)

#
# Generic Appveyor build script for boostorg repositories
# See: https://github.com/boostorg/boost-ci/
#
# Instructions for customizing this script for your library:
#
# 1. Customize the compilers and language levels you want.
# 2. If you have more than include/, src/, test/, example/, examples/,
#    benchmark/ or tools/ directories, set the environment variable DEPINST.
#    For example if your build uses code in "bench/" and "fog/" directories:
#      - DEPINST: --include bench --include fog
# 3. Enable pull request builds in your boostorg/<library> account.
#
# That's it - the script will do everything else for you.
#

version: 1.0.{build}-{branch}

shallow_clone: true

branches:
  only:
    - develop
    - master

matrix:
  # Adding MAYFAIL to any matrix job allows it to fail but the build stays green:
  allow_failures:
    - MAYFAIL: true

environment:
  global:
    # see: http://www.boost.org/build/doc/html/bbv2/overview/invocation.html#bbv2.overview.invocation.properties
    # to use the default for a given environment, comment it out; recommend you build debug and release however:
    # on Windows it is important to exercise all the possibilities, especially shared vs static, however most
    # libraries that care about this exercise it in their Jamfiles...
    # B2_ADDRESS_MODEL: address-model=64,32
    # B2_LINK: link=shared,static
    # B2_THREADING: threading=multi,single
    B2_VARIANT: variant=release,debug

  matrix:
    - FLAVOR: cygwin (32-bit)
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      ADDPATH: C:\cygwin\bin;
      B2_ADDRESS_MODEL: address-model=32
      CXXSTD: 11
      CXXFLAGS: cxxflags=-Wa,-mbig-obj
      # https://github.com/boostorg/test/issues/144
      DEFINES: define=_POSIX_C_SOURCE=200112L
      THREADING: threadapi=pthread
      TOOLSET: gcc

    - FLAVOR: cygwin (64-bit)
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      ADDPATH: C:\cygwin64\bin;
      B2_ADDRESS_MODEL: address-model=64
      CXXSTD: 11,17
      CXXFLAGS: cxxflags=-Wa,-mbig-obj
      # https://github.com/boostorg/test/issues/144
      DEFINES: define=_POSIX_C_SOURCE=200112L define=__USE_ISOC99
      THREADING: threadapi=pthread
      TOOLSET: gcc

    - FLAVOR: mingw32
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      ARCH: i686
      B2_ADDRESS_MODEL: address-model=32
      CXXSTD: 11
      SCRIPT: ci\appveyor\mingw.bat

    - FLAVOR: mingw64
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      ARCH: x86_64
      B2_ADDRESS_MODEL: address-model=64
      B2_VARIANT: variant=release
      CXXSTD: 11,14,17
      DEFINES: define=__USE_ISOC99
      SCRIPT: ci\appveyor\mingw.bat

    - FLAVOR: Visual Studio 2017
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      TOOLSET: msvc-14.1
      B2_ADDRESS_MODEL: address-model=64,32
      B2_LINK: link=shared
      B2_THREADING: threading=single,multi
      #CXXFLAGS: cxxflags=-permissive-
      CXXSTD: 11,14,17,2a

    - FLAVOR: Visual Studio 2015
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
      TOOLSET: msvc-14.0
      B2_ADDRESS_MODEL: address-model=64,32
      B2_LINK: link=shared
      B2_THREADING: threading=single,multi
      CXXSTD: 11,14

    - FLAVOR: Visual Studio 2017
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      TOOLSET: msvc-14.1
      B2_ADDRESS_MODEL: address-model=64,32
      B2_LINK: link=static
      B2_THREADING: threading=single,multi
      #CXXFLAGS: cxxflags=-permissive-
      CXXSTD: 11,14,17,2a

    - FLAVOR: Visual Studio 2015
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
      TOOLSET: msvc-14.0
      B2_ADDRESS_MODEL: address-model=64,32
      B2_LINK: link=static
      B2_THREADING: threading=single,multi
      CXXSTD: 11,14

install:
  - set SELF=%APPVEYOR_PROJECT_NAME:-=_%
  - git clone https://github.com/boostorg/boost-ci.git C:\boost-ci
  - xcopy /s /e /q /i C:\boost-ci\ci .\ci
  - cd ..
  - git clone -b %APPVEYOR_REPO_BRANCH% --depth 1 https://github.com/boostorg/boost.git boost-root
  - cd boost-root
  - git submodule update -q --init libs/headers
  - git submodule update -q --init tools/boost_install
  - git submodule update -q --init tools/boostdep
  - git submodule update -q --init tools/build
  - xcopy /s /e /q /I %APPVEYOR_BUILD_FOLDER% libs\%SELF%
  - python tools/boostdep/depinst/depinst.py %SELF%
  - cmd /c bootstrap
  - b2 headers

build: off

test_script:
  - set SELF=%APPVEYOR_PROJECT_NAME:-=_%
  - PATH=%ADDPATH%%PATH%
  # The definition of TOOLCXX omits CXXSTD= if it was not defined above
  - IF NOT DEFINED CXXSTD (SET TOOLCXX=toolset=%TOOLSET%) ELSE (SET TOOLCXX=toolset=%TOOLSET% cxxstd=%CXXSTD%)
  # Echo the complete build command to the build log
  - IF NOT DEFINED SCRIPT                         (ECHO b2 libs/%SELF:\=/% %TOOLCXX% %CXXFLAGS% %DEFINES% %THREADING% %B2_ADDRESS_MODEL% %B2_LINK% %B2_THREADING% %B2_VARIANT% -j3)
  # Now go build...
  - IF DEFINED SCRIPT (call libs\%SELF%\%SCRIPT%) ELSE (b2 libs/%SELF:\=/% %TOOLCXX% %CXXFLAGS% %DEFINES% %THREADING% %B2_ADDRESS_MODEL% %B2_LINK% %B2_THREADING% %B2_VARIANT% -j3)
  
